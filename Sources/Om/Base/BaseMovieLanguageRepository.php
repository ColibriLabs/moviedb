<?php
/**
 * Generated By ColibriORM Generator
 * @author Ivan Gontarenko
*/

namespace ColibriLabs\Database\Om\Base;

use Colibri\Core\Repository;
use Colibri\Query\Statement\Comparison\Cmp;
use Colibri\Query\Statement\OrderBy;
use ColibriLabs\Database\Om\MovieLanguageRepository;
use ColibriLabs\Database\Om\MovieLanguage;
use Colibri\Core\ResultSet\ResultSetIterator;

/**
 * Magic methods for query-builder and access to the fields data
 *
 * @method MovieLanguage findOneById($id);
 * @method ResultSetIterator findById($id);
 * @method MovieLanguageRepository filterById($id, $cmp = Cmp::EQ);
 * @method MovieLanguageRepository orderById($vector = OrderBy::ASC);
 * @method MovieLanguageRepository groupById();
 * @method MovieLanguage findOneByMovieId($movie_id);
 * @method ResultSetIterator findByMovieId($movie_id);
 * @method MovieLanguageRepository filterByMovieId($movie_id, $cmp = Cmp::EQ);
 * @method MovieLanguageRepository orderByMovieId($vector = OrderBy::ASC);
 * @method MovieLanguageRepository groupByMovieId();
 * @method MovieLanguage findOneByLanguageId($language_id);
 * @method ResultSetIterator findByLanguageId($language_id);
 * @method MovieLanguageRepository filterByLanguageId($language_id, $cmp = Cmp::EQ);
 * @method MovieLanguageRepository orderByLanguageId($vector = OrderBy::ASC);
 * @method MovieLanguageRepository groupByLanguageId();
*/

class BaseMovieLanguageRepository extends Repository
{
  
  /**
   * BaseMovieLanguageRepository constructor.
   */
  public function __construct()
  {
    parent::__construct(MovieLanguage::class);
  }

}