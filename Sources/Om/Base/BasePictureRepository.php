<?php
/**
 * Generated By ColibriORM Generator
 * @author Ivan Gontarenko
*/

namespace ColibriLabs\Database\Om\Base;

use Colibri\Core\Repository;
use Colibri\Query\Statement\Comparison\Cmp;
use Colibri\Query\Statement\OrderBy;
use ColibriLabs\Database\Om\PictureRepository;
use ColibriLabs\Database\Om\Picture;
use Colibri\Core\ResultSet\ResultSetIterator;

/**
 * Magic methods for query-builder and access to the fields data
 *
 * @method Picture findOneById($id);
 * @method ResultSetIterator findById($id);
 * @method PictureRepository filterById($id, $cmp = Cmp::EQ);
 * @method PictureRepository orderById($vector = OrderBy::ASC);
 * @method PictureRepository groupById();
 * @method Picture findOneByHeight($height);
 * @method ResultSetIterator findByHeight($height);
 * @method PictureRepository filterByHeight($height, $cmp = Cmp::EQ);
 * @method PictureRepository orderByHeight($vector = OrderBy::ASC);
 * @method PictureRepository groupByHeight();
 * @method Picture findOneByWidth($width);
 * @method ResultSetIterator findByWidth($width);
 * @method PictureRepository filterByWidth($width, $cmp = Cmp::EQ);
 * @method PictureRepository orderByWidth($vector = OrderBy::ASC);
 * @method PictureRepository groupByWidth();
 * @method Picture findOneByFilePath($file_path);
 * @method ResultSetIterator findByFilePath($file_path);
 * @method PictureRepository filterByFilePath($file_path, $cmp = Cmp::EQ);
 * @method PictureRepository orderByFilePath($vector = OrderBy::ASC);
 * @method PictureRepository groupByFilePath();
 * @method Picture findOneByTmdbFilePath($tmdb_file_path);
 * @method ResultSetIterator findByTmdbFilePath($tmdb_file_path);
 * @method PictureRepository filterByTmdbFilePath($tmdb_file_path, $cmp = Cmp::EQ);
 * @method PictureRepository orderByTmdbFilePath($vector = OrderBy::ASC);
 * @method PictureRepository groupByTmdbFilePath();
 * @method Picture findOneByIso6391($iso_639_1);
 * @method ResultSetIterator findByIso6391($iso_639_1);
 * @method PictureRepository filterByIso6391($iso_639_1, $cmp = Cmp::EQ);
 * @method PictureRepository orderByIso6391($vector = OrderBy::ASC);
 * @method PictureRepository groupByIso6391();
 * @method Picture findOneByVersion($version);
 * @method ResultSetIterator findByVersion($version);
 * @method PictureRepository filterByVersion($version, $cmp = Cmp::EQ);
 * @method PictureRepository orderByVersion($vector = OrderBy::ASC);
 * @method PictureRepository groupByVersion();
 * @method Picture findOneByCreated($created);
 * @method ResultSetIterator findByCreated($created);
 * @method PictureRepository filterByCreated($created, $cmp = Cmp::EQ);
 * @method PictureRepository orderByCreated($vector = OrderBy::ASC);
 * @method PictureRepository groupByCreated();
 * @method Picture findOneByUpdated($updated);
 * @method ResultSetIterator findByUpdated($updated);
 * @method PictureRepository filterByUpdated($updated, $cmp = Cmp::EQ);
 * @method PictureRepository orderByUpdated($vector = OrderBy::ASC);
 * @method PictureRepository groupByUpdated();
*/

class BasePictureRepository extends Repository
{
  
  /**
   * BasePictureRepository constructor.
   */
  public function __construct()
  {
    parent::__construct(Picture::class);
  }

}