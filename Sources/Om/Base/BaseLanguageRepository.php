<?php
/**
 * Generated By ColibriORM Generator
 * @author Ivan Gontarenko
*/

namespace ColibriLabs\Database\Om\Base;

use Colibri\Core\Repository;
use Colibri\Query\Statement\Comparison\Cmp;
use Colibri\Query\Statement\OrderBy;
use ColibriLabs\Database\Om\LanguageRepository;
use ColibriLabs\Database\Om\Language;
use Colibri\Core\ResultSet\ResultSetIterator;

/**
 * Magic methods for query-builder and access to the fields data
 *
 * @method Language findOneById($id);
 * @method ResultSetIterator findById($id);
 * @method LanguageRepository filterById($id, $cmp = Cmp::EQ);
 * @method LanguageRepository orderById($vector = OrderBy::ASC);
 * @method LanguageRepository groupById();
 * @method Language findOneByIso6391($iso_639_1);
 * @method ResultSetIterator findByIso6391($iso_639_1);
 * @method LanguageRepository filterByIso6391($iso_639_1, $cmp = Cmp::EQ);
 * @method LanguageRepository orderByIso6391($vector = OrderBy::ASC);
 * @method LanguageRepository groupByIso6391();
 * @method Language findOneByName($name);
 * @method ResultSetIterator findByName($name);
 * @method LanguageRepository filterByName($name, $cmp = Cmp::EQ);
 * @method LanguageRepository orderByName($vector = OrderBy::ASC);
 * @method LanguageRepository groupByName();
 * @method Language findOneByVersion($version);
 * @method ResultSetIterator findByVersion($version);
 * @method LanguageRepository filterByVersion($version, $cmp = Cmp::EQ);
 * @method LanguageRepository orderByVersion($vector = OrderBy::ASC);
 * @method LanguageRepository groupByVersion();
 * @method Language findOneByCreated($created);
 * @method ResultSetIterator findByCreated($created);
 * @method LanguageRepository filterByCreated($created, $cmp = Cmp::EQ);
 * @method LanguageRepository orderByCreated($vector = OrderBy::ASC);
 * @method LanguageRepository groupByCreated();
 * @method Language findOneByUpdated($updated);
 * @method ResultSetIterator findByUpdated($updated);
 * @method LanguageRepository filterByUpdated($updated, $cmp = Cmp::EQ);
 * @method LanguageRepository orderByUpdated($vector = OrderBy::ASC);
 * @method LanguageRepository groupByUpdated();
*/

class BaseLanguageRepository extends Repository
{
  
  /**
   * BaseLanguageRepository constructor.
   */
  public function __construct()
  {
    parent::__construct(Language::class);
  }

}