<?php
/**
 * Generated By ColibriORM Generator
 * @author Ivan Gontarenko
*/

namespace ColibriLabs\Database\Om\Base;

use Colibri\Core\Repository;
use Colibri\Query\Statement\Comparison\Cmp;
use Colibri\Query\Statement\OrderBy;
use ColibriLabs\Database\Om\UserRepository;
use ColibriLabs\Database\Om\User;
use Colibri\Core\ResultSet\ResultSetIterator;

/**
 * Magic methods for query-builder and access to the fields data
 *
 * @method User findOneById($id);
 * @method ResultSetIterator findById($id);
 * @method UserRepository filterById($id, $cmp = Cmp::EQ);
 * @method UserRepository orderById($vector = OrderBy::ASC);
 * @method UserRepository groupById();
 * @method User findOneByEmail($email);
 * @method ResultSetIterator findByEmail($email);
 * @method UserRepository filterByEmail($email, $cmp = Cmp::EQ);
 * @method UserRepository orderByEmail($vector = OrderBy::ASC);
 * @method UserRepository groupByEmail();
 * @method User findOneBySettings($settings);
 * @method ResultSetIterator findBySettings($settings);
 * @method UserRepository filterBySettings($settings, $cmp = Cmp::EQ);
 * @method UserRepository orderBySettings($vector = OrderBy::ASC);
 * @method UserRepository groupBySettings();
 * @method User findOneByLogin($login);
 * @method ResultSetIterator findByLogin($login);
 * @method UserRepository filterByLogin($login, $cmp = Cmp::EQ);
 * @method UserRepository orderByLogin($vector = OrderBy::ASC);
 * @method UserRepository groupByLogin();
 * @method User findOneByPassword($password);
 * @method ResultSetIterator findByPassword($password);
 * @method UserRepository filterByPassword($password, $cmp = Cmp::EQ);
 * @method UserRepository orderByPassword($vector = OrderBy::ASC);
 * @method UserRepository groupByPassword();
*/

class BaseUserRepository extends Repository
{
  
  /**
   * BaseUserRepository constructor.
   */
  public function __construct()
  {
    parent::__construct(User::class);
  }

}